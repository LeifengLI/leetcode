package com.lishon.leetcode;

/**
 * @author lishon
 * @create 2018-01-30 13:18
 **/

//  Definition for singly-linked list.
  class ListNode {
      int val;
      ListNode next;
      ListNode(int x) { val = x; }
  }
 
public class App {
	public ListNode mergeTwoLists(ListNode l1, ListNode l2){
		if(l1 == null) return l2;
		if(l2 == null) return l1;
		if(l1.val < l2.val){
			l1.next = mergeTwoLists(l1.next, l2);
			return l1;
		} else{
			l2.next = mergeTwoLists(l1, l2.next);
			return l2;
		}
}
    
    public static void main(String[] args) {
		ListNode l1 = new ListNode(1);
		ListNode l11 = new ListNode(2);
		ListNode l111 = new ListNode(4);
		l1.next = l11;
		l11.next = l111;
		l1 = null;
		
		ListNode l2 = new ListNode(1);
		ListNode l22 = new ListNode(2);
		ListNode l222 = new ListNode(4);
		l2.next = l22;
		l22.next = l222;
		
		App app = new App();
		ListNode mergeTwoLists = app.mergeTwoLists(l1, l2);
		while(mergeTwoLists.next != null) {
			
			System.out.println(mergeTwoLists.val);
			mergeTwoLists = mergeTwoLists.next;
		}
	}
}
